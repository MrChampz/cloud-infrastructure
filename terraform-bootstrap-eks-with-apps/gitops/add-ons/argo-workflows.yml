apiVersion: v1
kind: Namespace
metadata:
  name: argo-workflows
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: full-permissions-cluster-role
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: full-permissions-service-account
  namespace: argo-workflows
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::736425745347:role/argo-workflows-irsa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: full-permissions-cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: full-permissions-cluster-role
subjects:
  - kind: ServiceAccount
    name: full-permissions-service-account
    namespace: argo-workflows
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: argo-workflows
  namespace: flux-system
  labels:
    self-managed-add-on: true
    add-on-version: "0.28.2"
spec:
  releaseName: argo-workflows
  targetNamespace: argo-workflows
  storageNamespace: argo-workflows
  interval: 1m0s
  chart:
    spec:
      chart: argo-workflows
      version: 0.28.2
      sourceRef:
        kind: HelmRepository
        name: argo
  values:
    useStaticCredentials: false
    artifactRepository:
      s3:
        bucket: tf-argo-artifacts-8585ae96-1d3c-393d-d621-3c6768046f1e
        region: us-east-1
        endpoint: s3.amazonaws.com
    workflow:
      serviceAccount:
        create: true
        name: "argo-workflow"
        annotations:
          eks.amazonaws.com/role-arn: arn:aws:iam::736425745347:role/argo-workflows-irsa
      rbac:
        create: true
    controller:
      workflowNamespaces:
        - argo-workflows
    server:
      serviceType: LoadBalancer
      serviceAccount:
        annotations:
          eks.amazonaws.com/role-arn: arn:aws:iam::736425745347:role/argo-workflows-irsa
      extraArgs:
      - --auth-mode=server
  install: {}